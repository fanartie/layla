{"version":3,"sources":["initState.js","reducer.js","store.js","component/DropdownCountry/index.js","component/Layout/index.js","hook/fetchGet.js","hook/useArtistList.js","hook/fetchArtistPhoto.js","hook/useArtistPhoto.js","component/ArtistListOne/index.js","component/ArtistBrowse/index.js","hook/useArtist.js","hook/useAlbumList.js","component/AlbumListOne/index.js","component/Artist/index.js","hook/useAlbum.js","hook/useAlbumTrackList.js","component/Album/index.js","component/App/index.js","reportWebVitals.js","index.js","config.js"],"names":["module","exports","currentCountry","reducer","state","initState","action","type","immer","draft","countryCode","toLowerCase","store","createStore","countryOptions","key","value","flag","text","DropdownCountry","dispatch","useDispatch","Dropdown","defaultValue","getState","selection","options","placeholder","onChange","event","data","Layout","props","Segment","padded","style","margin","minHeight","children","fetchGet","params","a","axios","get","url","res","useArtistList","artistList","useSelector","useSWR","config","musicEndpoint","apiName","country","page","page_size","error","message","body","artist_list","isLoading","isError","fetchArtistPhoto","name","Promise","src","albumArt","err","e","useArtistPhoto","artistName","ArtistListOne","navigate","useNavigate","artist","imgSrc","artist_name","styleProps","size","master","cursor","Item","onClick","artist_id","Image","Content","Header","artist_country","length","Meta","begin_date","artist_rating","ArtistBrowse","ArtistList","console","log","Group","divided","map","one","useArtist","useParams","artistId","useAlbumList","albumList","album_list","AlbumListOne","album","albumId","album_id","album_name","genreList","primary_genres","music_genre_list","forEach","i","music_genre","music_genre_name","push","album_release_date","album_rating","album_copyright","Extra","genreName","Label","Date","getTime","Math","random","Artist","ArtistInfo","AlbumList","useAlbum","useAlbumTrackList","trackList","track_list","Album","AlbumInfo","TrackList","idx","track","track_id","TrackListOne","track_name","track_rating","track_length","Button","window","open","track_share_url","primary","floated","Icon","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c256ab66.chunk.js","sourcesContent":["module.exports = {\n\n    currentCountry: 'ca',\n\n}","\nimport initState from './initState';\nimport immer from 'immer';\n\nconst reducer = (state=initState, action) => {\n\n    switch (action.type) {\n\n        case 'setCountry':\n            return immer(state, draft =>{\n                draft.currentCountry = (action.countryCode || '').toLowerCase()\n            })\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n\n\n","import { createStore } from 'redux';\n\nimport reducer from \"./reducer\";\n\nconst store = createStore(\n    reducer\n);\n\nexport default store;\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { useDispatch } from 'react-redux';\nimport store from '../../store';\n\nconst countryOptions = [\n    { key: 'ca', value: 'ca', flag: 'ca', text: 'Canada' },\n    { key: 'us', value: 'us', flag: 'us', text: 'United State' },\n    { key: 'gb', value: 'gb', flag: 'gb', text: 'United Kingdom' },\n    { key: 'it', value: 'it', flag: 'it', text: 'Italy' },\n    { key: 'jp', value: 'jp', flag: 'jp', text: 'Japan' },\n    { key: 'tw', value: 'tw', flag: 'tw', text: 'Taiwan' },\n]\n\n\nfunction DropdownCountry() {\n\n    const dispatch = useDispatch();\n\n    const onChangeCountry = (event, data) => {\n        //console.log(data.value);\n        dispatch({\n            type: 'setCountry',\n            countryCode: data.value\n        })\n    }\n\n    return (\n        <Dropdown\n            defaultValue={store.getState().currentCountry}\n            selection\n            options={countryOptions}\n            placeholder='Select Country'\n            onChange={onChangeCountry}\n        />\n    )\n}\n\nexport default DropdownCountry;\n","\nimport { Segment } from 'semantic-ui-react';\n\nconst Layout = props => {\n\n  return (\n      <Segment padded style={{margin:'40px', minHeight:'600px'}}>\n          {props.children}\n      </Segment>\n  );\n}\n\nexport default Layout;\n","\nimport axios from 'axios';\n\nconst fetchGet = async params => {\n\n    let res = await axios.get(params.url, {\n        params: params.data,\n    });\n\n    return res.data;\n\n}\n\nexport default fetchGet","\n\nimport useSWR from 'swr';\nimport fetchGet from './fetchGet';\nimport config from '../config';\nimport { useSelector } from 'react-redux';\n\nconst useArtistList = () => {\n    let currentCountry = useSelector(state => state.currentCountry) || '';\n\n    const { data, error } = useSWR({\n        url: config.musicEndpoint,\n        data: {\n            apiName: 'chart.artists.get',\n            country: currentCountry.toLowerCase(),\n            page: 1,\n            page_size: 10\n        }\n    }, fetchGet);\n\n    let artistList;\n    if (data && data.message && data.message.body && data.message.body.artist_list) {\n        artistList = data.message.body.artist_list;\n    }\n\n    return {\n        artistList: artistList,\n        isLoading: !error && !artistList,\n        isError: error\n    }\n}\n\nexport default useArtistList","import albumArt from 'album-art';\n\nconst fetchArtistPhoto = async name => {\n\n    return await new Promise(res=>{\n        let src = 'https://react.semantic-ui.com/images/wireframe/image.png';\n\n        try {\n            albumArt( name, (err, url)=>{\n                if (err) {\n                } else {\n                    src=url;\n                }\n                //console.log('src=',src);\n                res(src);\n            })\n        } catch(e) {\n            res(src);\n        }\n\n\n    });\n\n}\n\nexport default fetchArtistPhoto","\n\nimport useSWR from 'swr';\nimport fetchArtistPhoto from './fetchArtistPhoto';\n\n\nconst useArtistPhoto = artistName => {\n    const { data } = useSWR(artistName, fetchArtistPhoto);\n\n    return {\n        src: data\n    }\n}\n\nexport default useArtistPhoto","\n\nimport { Item } from 'semantic-ui-react'\nimport useArtistPhoto from \"../../hook/useArtistPhoto\";\nimport { useNavigate } from 'react-router-dom';\n\nconst ArtistListOne = props => {\n    const navigate = useNavigate();\n\n    let artist = props.artist;\n\n    const { src } = useArtistPhoto(artist.artist_name);\n\n    let imgSrc = src || 'https://react.semantic-ui.com/images/wireframe/image.png';\n\n    const onClickArtistOne = () => {\n        if (props.master) {\n        } else {\n            navigate(\"/artist/\"+artist.artist_id)\n        }\n    }\n\n    let styleProps = {};\n    let size = 'tiny';\n    if (props.master) {\n        size = 'small'\n    } else {\n        styleProps = {\n            cursor:'pointer'\n        }\n    }\n\n    return (\n        <Item\n            onClick={onClickArtistOne}\n            style={styleProps}\n            key={artist.artist_id}>\n            <Item.Image size={size} src={imgSrc} />\n\n            <Item.Content>\n                <Item.Header>{artist.artist_name}</Item.Header>\n                {artist.artist_country.length>0 &&\n                <Item.Meta>\n                    <span>Country:</span>\n                    <span>{artist.artist_country}</span>\n                </Item.Meta>\n                }\n                {artist.begin_date!=='0000-00-00' &&\n                <Item.Meta>\n                    <span>Since:</span>\n                    <span>{artist.begin_date}</span>\n                </Item.Meta>\n                }\n\n                <Item.Meta>\n                    <span>Rating:</span>\n                    <span>{artist.artist_rating}</span>\n                </Item.Meta>\n            </Item.Content>\n        </Item>\n    );\n}\n\nexport default ArtistListOne;\n","\nimport DropdownCountry from \"../DropdownCountry\";\nimport Layout from \"../Layout\";\nimport useArtistList from \"../../hook/useArtistList\";\nimport { Item } from \"semantic-ui-react\";\nimport ArtistListOne from \"../ArtistListOne\";\n\nfunction ArtistBrowse() {\n\n  return (\n      <Layout>\n        <DropdownCountry/>\n        <ArtistList/>\n      </Layout>\n  );\n}\n\nexport default ArtistBrowse;\n\n\n\nfunction ArtistList() {\n\n    const { artistList, isLoading, isError } = useArtistList();\n\n    if (isError) return <div>failed to load artist list</div>\n    if (isLoading) return <div>loading artist list...</div>\n\n    console.log(artistList);\n\n    return (\n        <Item.Group divided>\n            {\n                artistList.map(one=>{\n                    let artist = one.artist;\n                    return(\n                        <ArtistListOne key={artist.artist_id} artist={artist}/>\n                    )\n                })\n            }\n\n        </Item.Group>\n    );\n}","\n\nimport useSWR from 'swr';\nimport fetchGet from './fetchGet';\nimport config from '../config';\nimport {useParams} from \"react-router-dom\";\n\nconst useArtist = () => {\n\n    let params = useParams();\n\n    const { data, error } = useSWR({\n        url: config.musicEndpoint,\n        data: {\n            apiName: 'artist.get',\n            artist_id: params.artistId,\n        }\n    }, fetchGet);\n\n    let artist;\n    if (data && data.message && data.message.body && data.message.body.artist) {\n        artist = data.message.body.artist;\n    }\n\n    return {\n        artist: artist,\n        isLoading: !error && !artist,\n        isError: error\n    }\n}\n\nexport default useArtist","\n\nimport useSWR from 'swr';\nimport fetchGet from './fetchGet';\nimport config from '../config';\nimport {useParams} from \"react-router-dom\";\n\nconst useAlbumList = () => {\n\n    let params = useParams();\n\n    const { data, error } = useSWR({\n        url: config.musicEndpoint,\n        data: {\n            apiName: 'artist.albums.get',\n            artist_id: params.artistId\n        }\n    }, fetchGet);\n\n\n    let albumList;\n    if (data && data.message && data.message.body && data.message.body.album_list) {\n        albumList = data.message.body.album_list;\n    }\n\n    console.log(albumList);\n\n    return {\n        albumList: albumList,\n        isLoading: !error && !albumList,\n        isError: error\n    }\n}\n\nexport default useAlbumList","\nimport React from 'react';\nimport { Item, Label} from 'semantic-ui-react'\nimport useArtistPhoto from \"../../hook/useArtistPhoto\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst AlbumListOne = props => {\n\n    const navigate = useNavigate();\n\n    let album = props.album;\n    let albumId = album.album_id;\n    let artistId = props.artistId;\n\n    const { src } = useArtistPhoto(album.album_name);\n\n    let imgSrc = src || 'https://react.semantic-ui.com/images/wireframe/image.png';\n\n    const onClickAlbumListOne = () => {\n        if (props.master) {\n        } else {\n            navigate(\"/album/\"+artistId+'/'+albumId)\n        }\n    }\n\n    let styleProps = {};\n    if (props.master) {\n    } else {\n        styleProps = {\n            cursor:'pointer'\n        }\n    }\n\n    let genreList = [];\n    if (album.primary_genres && album.primary_genres.music_genre_list) {\n        album.primary_genres.music_genre_list.forEach(i=>{\n            if (i.music_genre && i.music_genre.music_genre_name) {\n                genreList.push(i.music_genre.music_genre_name)\n            }\n        })\n    }\n\n\n\n\n    return (\n        <Item\n            onClick={onClickAlbumListOne}\n            style={styleProps}\n            key={album.album_id}>\n            <Item.Image size='tiny' src={imgSrc} />\n\n            <Item.Content>\n                <Item.Header>{album.album_name}</Item.Header>\n                <Item.Meta>\n                    <span>Genres:</span>\n                    <span>later</span>\n                </Item.Meta>\n                <Item.Meta>\n                    <span>Release:</span>\n                    <span>{album.album_release_date}</span>\n                </Item.Meta>\n                <Item.Meta>\n                    <span>Rating:</span>\n                    <span>{album.album_rating}</span>\n                </Item.Meta>\n                {album.album_copyright &&\n                <Item.Meta>\n                    <span>Copyright:</span>\n                    <span>{album.album_copyright}</span>\n                </Item.Meta>\n                }\n\n\n                {genreList.length>0 &&\n                <Item.Extra>\n                    {genreList.map(genreName=>{\n                        return (\n                            <Label key={new Date().getTime() + Math.random(10)}>{genreName}</Label>\n                    )\n                    })}\n                </Item.Extra>\n                }\n\n\n            </Item.Content>\n        </Item>\n    );\n}\n\nexport default AlbumListOne;\n","\nimport Layout from \"../Layout\";\nimport useArtist from \"../../hook/useArtist\";\nimport useAlbumList from \"../../hook/useAlbumList\";\nimport ArtistListOne from \"../ArtistListOne\";\nimport AlbumListOne from \"../AlbumListOne\";\nimport { Item, Segment } from 'semantic-ui-react';\nimport {useParams} from \"react-router-dom\";\n\nfunction Artist() {\n    return (\n        <Layout>\n            <ArtistInfo/>\n            <AlbumList/>\n        </Layout>\n    );\n}\n\nexport default Artist;\n\n\nconst ArtistInfo = () => {\n    const { artist, isLoading, isError } = useArtist();\n    if (isError) return <div>failed to load artist info</div>\n    if (isLoading) return <div>loading artist info...</div>\n    return (\n        <Segment>\n            <Item.Group divided>\n                <ArtistListOne artist={artist} master={true}/>\n            </Item.Group>\n        </Segment>\n    )\n}\n\n\nconst AlbumList = () => {\n    let params = useParams();\n    const { albumList, isLoading, isError } = useAlbumList();\n    if (isError) return <div>failed to load album list</div>\n    if (isLoading) return <div>loading album list...</div>\n    return (\n        <Item.Group divided>\n            {\n                albumList.map(one=>{\n                    let album = one.album;\n                    return(\n                        <AlbumListOne key={album.album_id} album={album} artistId={params.artistId}/>\n                    )\n                })\n            }\n\n        </Item.Group>\n    )\n}","\n\nimport useSWR from 'swr';\nimport fetchGet from './fetchGet';\nimport config from '../config';\nimport {useParams} from \"react-router-dom\";\n\nconst useAlbum = () => {\n\n    let params = useParams();\n\n    const { data, error } = useSWR({\n        url: config.musicEndpoint,\n        data: {\n            apiName: 'album.get',\n            album_id: params.albumId,\n        }\n    }, fetchGet);\n\n    let album;\n    if (data && data.message && data.message.body && data.message.body.album) {\n        album = data.message.body.album;\n    }\n\n    return {\n        album: album,\n        isLoading: !error && !album,\n        isError: error\n    }\n}\n\nexport default useAlbum","\n\nimport useSWR from 'swr';\nimport fetchGet from './fetchGet';\nimport config from '../config';\nimport {useParams} from \"react-router-dom\";\n\nconst useAlbumTrackList = () => {\n\n    let params = useParams();\n\n    const { data, error } = useSWR({\n        url: config.musicEndpoint,\n        data: {\n            apiName: 'album.tracks.get',\n            album_id: params.albumId\n        }\n    }, fetchGet);\n\n\n    let trackList;\n    if (data && data.message && data.message.body && data.message.body.track_list) {\n        trackList = data.message.body.track_list;\n    }\n\n    console.log(trackList);\n\n    return {\n        trackList: trackList,\n        isLoading: !error && !trackList,\n        isError: error\n    }\n}\n\nexport default useAlbumTrackList","\nimport Layout from \"../Layout\";\n\nimport {Item, Label, Segment, Button, Icon} from \"semantic-ui-react\";\nimport ArtistListOne from \"../ArtistListOne\";\nimport AlbumListOne from \"../AlbumListOne\";\nimport useArtist from \"../../hook/useArtist\";\nimport useAlbum from \"../../hook/useAlbum\";\nimport useAlbumTrackList from \"../../hook/useAlbumTrackList\";\nimport React from \"react\";\n\nfunction Album() {\n\n    return (\n\n        <Layout>\n            <ArtistInfo/>\n            <AlbumInfo/>\n            <TrackList/>\n        </Layout>\n    );\n}\n\nexport default Album;\n\n\nconst ArtistInfo = () => {\n    const { artist, isLoading, isError } = useArtist();\n    if (isError) return <div>failed to load artist info</div>\n    if (isLoading) return <div>loading artist info...</div>\n    return (\n        <Segment>\n            <Item.Group divided>\n                <ArtistListOne artist={artist} master={true}/>\n            </Item.Group>\n        </Segment>\n    )\n}\n\nconst AlbumInfo = () => {\n    const { album, isLoading, isError } = useAlbum();\n    if (isError) return <div>failed to load album info</div>\n    if (isLoading) return <div>loading album info...</div>\n    return (\n        <Segment>\n            <Item.Group divided>\n                <AlbumListOne album={album} master={true}/>\n            </Item.Group>\n        </Segment>\n    )\n}\n\nconst TrackList = () => {\n    const { trackList, isLoading, isError } = useAlbumTrackList();\n    if (isError) return <div>failed to load track list</div>\n    if (isLoading) return <div>loading track list...</div>\n    return (\n        <Item.Group divided>\n            {\n                trackList.map((one,idx)=>{\n                    let track = one.track;\n                    return(\n                        <TrackListOne key={track.track_id} track={track} idx={idx} />\n                    )\n                })\n            }\n\n        </Item.Group>\n    )\n}\n\n\nconst TrackListOne = props => {\n\n    let track = props.track;\n\n    let genreList = [];\n    if (track.primary_genres && track.primary_genres.music_genre_list) {\n        track.primary_genres.music_genre_list.forEach(i=>{\n            if (i.music_genre && i.music_genre.music_genre_name) {\n                genreList.push(i.music_genre.music_genre_name)\n            }\n        })\n    }\n\n    const onClickShare = () => {\n        window.open(track.track_share_url, '_blank');\n    }\n\n    return (\n        <Item>\n            <Item.Content>\n                <Item.Header>{props.idx+1}. {track.track_name}</Item.Header>\n                <Item.Meta>\n                    <span>Rating:</span>\n                    <span>{track.track_rating}</span>\n                    <span>Length:</span>\n                    <span>{track.track_length}</span>\n                </Item.Meta>\n                {genreList.length>0 &&\n                <Item.Extra>\n                    {genreList.map(genreName=>{\n                        return (\n                            <Label key={new Date().getTime() + Math.random(10)}>{genreName}</Label>\n                        )\n                    })}\n\n                </Item.Extra>\n                }\n                <Item.Extra>\n                    <Button onClick={onClickShare} primary floated='right'>\n                        Share\n                        <Icon name='right chevron' />\n                    </Button>\n                </Item.Extra>\n            </Item.Content>\n        </Item>\n    );\n}","\nimport 'semantic-ui-css/semantic.min.css';\nimport { Routes, Route } from \"react-router-dom\";\n\nimport ArtistBrowse from \"../ArtistBrowse\";\nimport Artist from \"../Artist\";\nimport Album from \"../Album\";\n\nfunction App() {\n  return (\n      <Routes>\n          <Route path=\"/\" element={<ArtistBrowse />} />\n          <Route path=\"/artist/:artistId\" element={<Artist />} />\n          <Route path=\"/album/:artistId/:albumId\" element={<Album />} />\n      </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename=\"/layla\">\n            <App />\n        </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\n    musicEndpoint: 'https://vr8rq1n7v9.execute-api.us-west-2.amazonaws.com/Prod/'\n}"],"sourceRoot":""}